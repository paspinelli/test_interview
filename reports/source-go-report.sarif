{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Go Security Audit",
          "rules": [
            {
              "id": "CWE-89",
              "help": {
                "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\nWithout sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data. This can be used to alter query logic to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands. SQL injection has become a common issue with database-driven web sites. The flaw is easily detected, and easily exploited, and as such, any site or software package with even a minimal user base is likely to be subject to an attempted attack of this kind. This flaw depends on the fact that SQL makes no real distinction between the control and data planes.",
                "markdown": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\nWithout sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data. This can be used to alter query logic to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands. SQL injection has become a common issue with database-driven web sites. The flaw is easily detected, and easily exploited, and as such, any site or software package with even a minimal user base is likely to be subject to an attempted attack of this kind. This flaw depends on the fact that SQL makes no real distinction between the control and data planes."
              },
              "name": "",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/89.html",
              "shortDescription": {
                "text": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')."
              }
            }
          ],
          "version": "1.0.0-scan",
          "fullName": "Go Security Audit"
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "-fmt=json",
            "-confidence=medium",
            "-severity=medium",
            "-no-fail",
            "-out=/app/reports/source-go-report.json",
            "./..."
          ],
          "executionSuccessful": true,
          "commandLine": "-fmt=json -confidence=medium -severity=medium -no-fail -out=/app/reports/source-go-report.json ./...",
          "endTimeUtc": "2022-03-18T10:18:14Z",
          "workingDirectory": {
            "uri": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2022-03-18T10:18:14Z",
          "workingDirectory": {
            "uri": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 2,
          "critical": 0,
          "high": 0,
          "medium": 2,
          "low": 0
        }
      },
      "results": [
        {
          "message": {
            "markdown": "",
            "text": "SQL string formatting."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tq := fmt.Sprintf(`select \"id\", \"hotelid\", \"arrive\", \"leave\", \"name\" from \"Bookings\" where \"hotelid\"='%d' AND \"id\"='%s'`, hotelID, ID)\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/postgres/repository.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "func (r *BookingRepo) ByID(ctx context.Context, hotelID int, ID string) (*innsecure.Booking, error) {\n\tq := fmt.Sprintf(`select \"id\", \"hotelid\", \"arrive\", \"leave\", \"name\" from \"Bookings\" where \"hotelid\"='%d' AND \"id\"='%s'`, hotelID, ID)\n"
                  },
                  "endLine": 52,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "3e3e91095409b7f8",
            "scanFileHash": "13c4920abdee0eca"
          },
          "ruleId": "CWE-89",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "SQL string formatting."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tstmt := fmt.Sprintf(`insert into \"Bookings\" (\"id\", \"hotelid\", \"arrive\", \"leave\", \"name\") values ('%s', '%d', '%s', '%s', '%s')`, b.ID, b.HotelID, b.Arrive, b.Leave, b.Name)\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/postgres/repository.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "func (r *BookingRepo) Insert(ctx context.Context, b innsecure.Booking) error {\n\tstmt := fmt.Sprintf(`insert into \"Bookings\" (\"id\", \"hotelid\", \"arrive\", \"leave\", \"name\") values ('%s', '%d', '%s', '%s', '%s')`, b.ID, b.HotelID, b.Arrive, b.Leave, b.Name)\n"
                  },
                  "endLine": 24,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "6a1edca8bcc22572",
            "scanFileHash": "13c4920abdee0eca"
          },
          "ruleId": "CWE-89",
          "ruleIndex": 0
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "8ac479b7-a387-4a3a-af31-40e043a9f4b7"
      },
      "versionControlProvenance": [
        {
          "branch": "main",
          "repositoryUri": "https://github.com/paspinelli/test_interview",
          "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "8ac479b7-a387-4a3a-af31-40e043a9f4b7",
      "runGuid": "11fc1265-adb7-44ee-be62-b5d55155bee1"
    }
  ]
}