{"findings": [{"app": "test_interview", "type": "extscan", "title": "Ensure that a user for the container has been created.", "description": "Ensure that a user for the container has been created.\n\n## Documentation\n\n- [AWS Terraform](https://registry.terraform.io/providers/hashicorp/aws/latest/docs)\n- [Azure Terraform](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs)\n- [Google Cloud Terraform](https://registry.terraform.io/providers/hashicorp/google/latest/docs)", "internal_id": "CKV_DOCKER_3/79f03534545e3ee86d4838b91f1227da", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "UserExists", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "test_interview", "repositoryUri": "https://github.com/paspinelli/test_interview", "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e", "branch": "main", "invokedBy": "Pablo Spinelli <pablo.spinelli@outlook.com>", "pullRequest": false, "botUser": false}, "name": "Ensure that a user for the container has been created.", "tags": "Scan", "fileName": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/Dockerfile", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "CKV_DOCKER_3", "ruleName": "UserExists", "contextText": "1 FROM golang:rc-stretch\n", "snippetText": "1 FROM golang:rc-stretch\n\nCOPY ./ /src\n"}, "tags": []}, {"app": "test_interview", "type": "extscan", "title": "Ensure that HEALTHCHECK instructions have been added to container images.", "description": "Ensure that HEALTHCHECK instructions have been added to container images.\n\n## Documentation\n\n- [AWS Terraform](https://registry.terraform.io/providers/hashicorp/aws/latest/docs)\n- [Azure Terraform](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs)\n- [Google Cloud Terraform](https://registry.terraform.io/providers/hashicorp/google/latest/docs)", "internal_id": "CKV_DOCKER_2/0bf7b646a89953fdb84b54044d2b8661", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "HealthcheckExists", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "test_interview", "repositoryUri": "https://github.com/paspinelli/test_interview", "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e", "branch": "main", "invokedBy": "Pablo Spinelli <pablo.spinelli@outlook.com>", "pullRequest": false, "botUser": false}, "name": "Ensure that HEALTHCHECK instructions have been added to container images.", "tags": "Scan", "fileName": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/Dockerfile", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "CKV_DOCKER_2", "ruleName": "HealthcheckExists", "contextText": "1 FROM golang:rc-stretch\n", "snippetText": "1 FROM golang:rc-stretch\n\nCOPY ./ /src\n"}, "tags": []}, {"app": "test_interview", "type": "extscan", "title": "SQL string formatting.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[CWE-89](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "CWE-89/e8c0949329acc15bc6d190caf0541a5a", "severity": "moderate", "owasp_category": "a1-injection", "category": "CWE-89", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "test_interview", "repositoryUri": "https://github.com/paspinelli/test_interview", "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e", "branch": "main", "invokedBy": "Pablo Spinelli <pablo.spinelli@outlook.com>", "pullRequest": false, "botUser": false}, "name": "SQL string formatting.", "tags": "Scan", "fileName": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/postgres/repository.go", "DATA_TYPE": "OSS_SCAN", "lineNumber": 52, "ruleId": "CWE-89", "ruleName": "", "contextText": "\tq := fmt.Sprintf(`select \"id\", \"hotelid\", \"arrive\", \"leave\", \"name\" from \"Bookings\" where \"hotelid\"='%d' AND \"id\"='%s'`, hotelID, ID)\n", "snippetText": "func (r *BookingRepo) ByID(ctx context.Context, hotelID int, ID string) (*innsecure.Booking, error) {\n\tq := fmt.Sprintf(`select \"id\", \"hotelid\", \"arrive\", \"leave\", \"name\" from \"Bookings\" where \"hotelid\"='%d' AND \"id\"='%s'`, hotelID, ID)\n"}, "tags": [{"key": "cwe_category", "value": "89", "shiftleft_managed": true}]}, {"app": "test_interview", "type": "extscan", "title": "SQL string formatting.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[CWE-89](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "CWE-89/75e3b7a78c323e363703b94ac06c6c16", "severity": "moderate", "owasp_category": "a1-injection", "category": "CWE-89", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "test_interview", "repositoryUri": "https://github.com/paspinelli/test_interview", "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e", "branch": "main", "invokedBy": "Pablo Spinelli <pablo.spinelli@outlook.com>", "pullRequest": false, "botUser": false}, "name": "SQL string formatting.", "tags": "Scan", "fileName": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/postgres/repository.go", "DATA_TYPE": "OSS_SCAN", "lineNumber": 24, "ruleId": "CWE-89", "ruleName": "", "contextText": "\tstmt := fmt.Sprintf(`insert into \"Bookings\" (\"id\", \"hotelid\", \"arrive\", \"leave\", \"name\") values ('%s', '%d', '%s', '%s', '%s')`, b.ID, b.HotelID, b.Arrive, b.Leave, b.Name)\n", "snippetText": "func (r *BookingRepo) Insert(ctx context.Context, b innsecure.Booking) error {\n\tstmt := fmt.Sprintf(`insert into \"Bookings\" (\"id\", \"hotelid\", \"arrive\", \"leave\", \"name\") values ('%s', '%d', '%s', '%s', '%s')`, b.ID, b.HotelID, b.Arrive, b.Leave, b.Name)\n"}, "tags": [{"key": "cwe_category", "value": "89", "shiftleft_managed": true}]}, {"app": "test_interview", "type": "extscan", "title": "the channel used with signal.Notify should be buffered.", "description": "the channel used with signal.Notify should be buffered.\n\n## Additional information\n\n**[SA1017](https://staticcheck.io/docs/checks#SA1017)**", "internal_id": "SA1017/15daf4c675fb1dda3403d416d82f4388", "severity": "moderate", "owasp_category": "", "category": "SA1017", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "test_interview", "repositoryUri": "https://github.com/paspinelli/test_interview", "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e", "branch": "main", "invokedBy": "Pablo Spinelli <pablo.spinelli@outlook.com>", "pullRequest": false, "botUser": false}, "name": "the channel used with signal.Notify should be buffered.", "tags": "Scan", "fileName": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/cmd/innsecure/main.go", "DATA_TYPE": "OSS_SCAN", "lineNumber": 58, "ruleId": "SA1017", "ruleName": "", "contextText": "\t\tsignal.Notify(c, syscall.SIGINT, syscall.SIGTERM)\n", "snippetText": "\t\tc := make(chan os.Signal)\n\t\tsignal.Notify(c, syscall.SIGINT, syscall.SIGTERM)\n"}, "tags": []}, {"app": "test_interview", "type": "extscan", "title": "should not use built-in type string as key for value; define your own type to avoid collisions.", "description": "should not use built-in type string as key for value; define your own type to avoid collisions.\n\n## Additional information\n\n**[SA1029](https://staticcheck.io/docs/checks#SA1029)**", "internal_id": "SA1029/938546dedaf4df70b96d3565946e34bd", "severity": "info", "owasp_category": "", "category": "SA1029", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "test_interview", "repositoryUri": "https://github.com/paspinelli/test_interview", "revisionId": "5076f6f24d77d5b75e05a04416936b37cdb47c9e", "branch": "main", "invokedBy": "Pablo Spinelli <pablo.spinelli@outlook.com>", "pullRequest": false, "botUser": false}, "name": "should not use built-in type string as key for value; define your own type to avoid collisions.", "tags": "Scan", "fileName": "file:///Users/pspinelli/Documents/vulneraiblity/test_interview/jwtauth/middleware.go", "DATA_TYPE": "OSS_SCAN", "lineNumber": 35, "ruleId": "SA1029", "ruleName": "", "contextText": "\t\t\tctx = context.WithValue(ctx, innsecure.UserContextKey, &u)\n", "snippetText": "\t\t\t}\n\t\t\tctx = context.WithValue(ctx, innsecure.UserContextKey, &u)\n"}, "tags": []}]}